#
# http://uwsgi-docs.readthedocs.org/en/latest/Options.html
# http://projects.unbit.it/uwsgi/wiki/TipsAndTricks
# http://uwsgi-docs.readthedocs.org/en/latest/articles/TheArtOfGracefulReloading.html
# http://uwsgi-docs.readthedocs.org/en/latest/ThingsToKnow.html
#
[uwsgi]
project        = ckan

procname       = %(project)-socket-%n
lazy-apps      = true
limit-post     = 0
socket-timeout = 240
socket         = 0.0.0.0:9100

# Run 'uwsgitop :9101'
stats          = 0.0.0.0:9101

# For memory usages stats
memory-report  = true

chdir          = /etc/ckan
wsgi-file      = /etc/ckan/default/wsgi.py
module         = wsgi:application
touch-reload   = /etc/uwsgi/vassals/%n.ini

processes      = @UWSGI_PROCESSES@
threads        = @UWSGI_THREADS@
master         = True
log-master     = True
vacuum         = True

# performance tuning
# See https://www.bloomberg.com/company/stories/configuring-uwsgi-production-deployment/

max-requests        = 500            ; Restart workers after this many requests
reload-on-rss       = 2048           ; Restart workers after this much resident memory
reload-mercy        = 600            ; How long to wait before forcefully killing workers
worker-reload-mercy = 600            ; How long to wait before forcefully killing workers

catch-exceptions = true

; Enable post-buffering - not sure exactly how it works, but it avoids
; unexpected closing of the connection by nginx during upload.
post-buffering  =  1

; Set the number of workers to something > 1, otherwise
; only one client can connect via nginx to uWSGI at a time.
; See https://github.com/ckan/ckan/issues/5933
workers         =  4

harakiri 	= 240
harakiri-verbose	= true

; from upstream CKAN config
callable	= application
buffer-size	= 65536
